INFO  10:40:48,861 - Compiling source file: C:\Users\Laptop\Desktop\pp1\workspace\MJCompiler\test\program.mj
INFO  10:40:48,866 - #1 program
INFO  10:40:48,866 - #44 p
INFO  10:40:48,867 - #16 namespace
INFO  10:40:48,867 - #44 sizes
INFO  10:40:48,867 - #41 {
INFO  10:40:48,867 - #5 const
INFO  10:40:48,867 - #44 int
INFO  10:40:48,867 - #44 tableSize
INFO  10:40:48,867 - #30 =
INFO  10:40:48,867 - #45 10
INFO  10:40:48,867 - #33 ;
INFO  10:40:48,867 - #41 {
INFO  10:40:48,867 - #42 }
INFO  10:40:48,868 - #42 }
INFO  10:40:48,868 - #3 class
INFO  10:40:48,868 - #44 Table
INFO  10:40:48,868 - #41 {
INFO  10:40:48,868 - #44 int
INFO  10:40:48,868 - #44 pos
INFO  10:40:48,868 - #39 [
INFO  10:40:48,869 - #40 ]
INFO  10:40:48,869 - #35 ,
INFO  10:40:48,869 - #44 neg
INFO  10:40:48,869 - #39 [
INFO  10:40:48,869 - #40 ]
INFO  10:40:48,869 - #35 ,
INFO  10:40:48,870 - #44 factor
INFO  10:40:48,870 - #33 ;
INFO  10:40:48,870 - #15 static
INFO  10:40:48,870 - #44 int
INFO  10:40:48,870 - #44 id
INFO  10:40:48,870 - #33 ;
INFO  10:40:48,870 - #15 static
INFO  10:40:48,870 - #41 {
INFO  10:40:48,870 - #44 id
INFO  10:40:48,870 - #30 =
INFO  10:40:48,870 - #45 0
INFO  10:40:48,871 - #33 ;
INFO  10:40:48,871 - #42 }
INFO  10:40:48,871 - #41 {
INFO  10:40:48,871 - #11 void
INFO  10:40:48,871 - #44 setfactor
INFO  10:40:48,871 - #37 (
INFO  10:40:48,871 - #44 int
INFO  10:40:48,871 - #44 factor
INFO  10:40:48,871 - #38 )
INFO  10:40:48,871 - #41 {
INFO  10:40:48,871 - #44 this
INFO  10:40:48,871 - #36 .
INFO  10:40:48,871 - #44 factor
INFO  10:40:48,872 - #30 =
INFO  10:40:48,872 - #44 factor
INFO  10:40:48,872 - #33 ;
INFO  10:40:48,872 - #42 }
INFO  10:40:48,872 - #11 void
INFO  10:40:48,872 - #44 putp
INFO  10:40:48,872 - #37 (
INFO  10:40:48,872 - #44 int
INFO  10:40:48,872 - #44 a
INFO  10:40:48,872 - #35 ,
INFO  10:40:48,872 - #44 int
INFO  10:40:48,872 - #44 idx
INFO  10:40:48,872 - #38 )
INFO  10:40:48,872 - #41 {
INFO  10:40:48,873 - #44 this
INFO  10:40:48,873 - #36 .
INFO  10:40:48,873 - #44 pos
INFO  10:40:48,873 - #39 [
INFO  10:40:48,873 - #44 idx
INFO  10:40:48,873 - #40 ]
INFO  10:40:48,873 - #30 =
INFO  10:40:48,873 - #44 a
INFO  10:40:48,873 - #33 ;
INFO  10:40:48,873 - #42 }
INFO  10:40:48,873 - #11 void
INFO  10:40:48,873 - #44 putn
INFO  10:40:48,873 - #37 (
INFO  10:40:48,873 - #44 int
INFO  10:40:48,873 - #44 a
INFO  10:40:48,873 - #35 ,
INFO  10:40:48,873 - #44 int
INFO  10:40:48,873 - #44 idx
INFO  10:40:48,873 - #38 )
INFO  10:40:48,873 - #41 {
INFO  10:40:48,873 - #44 this
INFO  10:40:48,873 - #36 .
INFO  10:40:48,873 - #44 neg
INFO  10:40:48,874 - #39 [
INFO  10:40:48,874 - #44 idx
INFO  10:40:48,874 - #40 ]
INFO  10:40:48,874 - #30 =
INFO  10:40:48,874 - #44 a
INFO  10:40:48,874 - #33 ;
INFO  10:40:48,874 - #42 }
INFO  10:40:48,874 - #44 int
INFO  10:40:48,874 - #44 getp
INFO  10:40:48,874 - #37 (
INFO  10:40:48,874 - #44 int
INFO  10:40:48,874 - #44 idx
INFO  10:40:48,874 - #38 )
INFO  10:40:48,874 - #41 {
INFO  10:40:48,874 - #10 return
INFO  10:40:48,874 - #44 pos
INFO  10:40:48,874 - #39 [
INFO  10:40:48,874 - #44 idx
INFO  10:40:48,874 - #40 ]
INFO  10:40:48,874 - #33 ;
INFO  10:40:48,874 - #42 }
INFO  10:40:48,876 - #44 int
INFO  10:40:48,876 - #44 getn
INFO  10:40:48,876 - #37 (
INFO  10:40:48,876 - #44 int
INFO  10:40:48,876 - #44 idx
INFO  10:40:48,876 - #38 )
INFO  10:40:48,876 - #41 {
INFO  10:40:48,876 - #10 return
INFO  10:40:48,876 - #44 neg
INFO  10:40:48,876 - #39 [
INFO  10:40:48,877 - #44 idx
INFO  10:40:48,877 - #40 ]
INFO  10:40:48,877 - #33 ;
INFO  10:40:48,877 - #42 }
INFO  10:40:48,877 - #42 }
INFO  10:40:48,877 - #42 }
INFO  10:40:48,877 - #44 Table
INFO  10:40:48,877 - #44 val
INFO  10:40:48,877 - #33 ;
INFO  10:40:48,877 - #44 int
INFO  10:40:48,877 - #44 rows
INFO  10:40:48,877 - #35 ,
INFO  10:40:48,877 - #44 columns
INFO  10:40:48,877 - #33 ;
INFO  10:40:48,878 - #41 {
INFO  10:40:48,878 - #11 void
INFO  10:40:48,878 - #44 f
INFO  10:40:48,878 - #37 (
INFO  10:40:48,878 - #44 char
INFO  10:40:48,878 - #44 ch
INFO  10:40:48,878 - #35 ,
INFO  10:40:48,878 - #44 int
INFO  10:40:48,878 - #44 a
INFO  10:40:48,878 - #35 ,
INFO  10:40:48,878 - #44 int
INFO  10:40:48,878 - #44 arg
INFO  10:40:48,878 - #38 )
INFO  10:40:48,878 - #44 int
INFO  10:40:48,879 - #44 x
INFO  10:40:48,879 - #33 ;
INFO  10:40:48,879 - #41 {
INFO  10:40:48,879 - #44 x
INFO  10:40:48,879 - #30 =
INFO  10:40:48,879 - #44 arg
INFO  10:40:48,879 - #33 ;
INFO  10:40:48,879 - #42 }
INFO  10:40:48,879 - #11 void
INFO  10:40:48,879 - #44 main
INFO  10:40:48,879 - #37 (
INFO  10:40:48,879 - #38 )
INFO  10:40:48,879 - #44 int
INFO  10:40:48,879 - #44 x
INFO  10:40:48,879 - #35 ,
INFO  10:40:48,879 - #44 i
INFO  10:40:48,879 - #33 ;
INFO  10:40:48,879 - #44 char
INFO  10:40:48,879 - #44 c
INFO  10:40:48,879 - #35 ,
INFO  10:40:48,880 - #44 int
INFO  10:40:48,880 - #39 [
INFO  10:40:48,880 - #40 ]
INFO  10:40:48,880 - #44 arr
INFO  10:40:48,880 - #33 ;
INFO  10:40:48,880 - #41 {
INFO  10:40:48,880 - #44 val
INFO  10:40:48,880 - #30 =
INFO  10:40:48,880 - #7 new
INFO  10:40:48,880 - #44 Table
INFO  10:40:48,880 - #37 (
INFO  10:40:48,880 - #38 )
INFO  10:40:48,880 - #33 ;
INFO  10:40:48,880 - #44 val
INFO  10:40:48,880 - #36 .
INFO  10:40:48,880 - #44 setfactor
INFO  10:40:48,881 - #37 (
INFO  10:40:48,881 - #45 2
INFO  10:40:48,881 - #38 )
INFO  10:40:48,881 - #33 ;
INFO  10:40:48,881 - #44 arr
INFO  10:40:48,881 - #30 =
INFO  10:40:48,881 - #7 new
INFO  10:40:48,881 - #44 int
INFO  10:40:48,881 - #39 [
INFO  10:40:48,881 - #45 3
INFO  10:40:48,881 - #40 ]
INFO  10:40:48,881 - #33 ;
INFO  10:40:48,881 - #14 for
INFO  10:40:48,881 - #37 (
INFO  10:40:48,881 - #44 i
INFO  10:40:48,881 - #30 =
INFO  10:40:48,882 - #45 0
INFO  10:40:48,882 - #33 ;
INFO  10:40:48,882 - #44 i
INFO  10:40:48,882 - #26 <
INFO  10:40:48,882 - #45 3
INFO  10:40:48,882 - #33 ;
INFO  10:40:48,882 - #44 i
INFO  10:40:48,882 - #31 ++
INFO  10:40:48,882 - #38 )
INFO  10:40:48,882 - #41 {
INFO  10:40:48,882 - #44 arr
INFO  10:40:48,882 - #39 [
INFO  10:40:48,882 - #44 i
INFO  10:40:48,882 - #40 ]
INFO  10:40:48,882 - #30 =
INFO  10:40:48,882 - #44 i
INFO  10:40:48,883 - #33 ;
INFO  10:40:48,883 - #42 }
INFO  10:40:48,883 - #14 for
INFO  10:40:48,883 - #37 (
INFO  10:40:48,883 - #44 i
INFO  10:40:48,883 - #30 =
INFO  10:40:48,883 - #45 0
INFO  10:40:48,883 - #33 ;
INFO  10:40:48,883 - #44 i
INFO  10:40:48,883 - #26 <
INFO  10:40:48,883 - #45 3
INFO  10:40:48,883 - #33 ;
INFO  10:40:48,883 - #44 i
INFO  10:40:48,883 - #31 ++
INFO  10:40:48,883 - #38 )
INFO  10:40:48,884 - #8 print
INFO  10:40:48,884 - #37 (
INFO  10:40:48,884 - #44 arr
INFO  10:40:48,884 - #39 [
INFO  10:40:48,884 - #44 i
INFO  10:40:48,884 - #40 ]
INFO  10:40:48,884 - #38 )
INFO  10:40:48,884 - #33 ;
INFO  10:40:48,884 - #44 val
INFO  10:40:48,884 - #36 .
INFO  10:40:48,884 - #44 pos
INFO  10:40:48,884 - #30 =
INFO  10:40:48,884 - #7 new
INFO  10:40:48,884 - #44 int
INFO  10:40:48,884 - #39 [
INFO  10:40:48,884 - #44 sizes
INFO  10:40:48,884 - #34 :
INFO  10:40:48,884 - #34 :
INFO  10:40:48,885 - #44 tableSize
INFO  10:40:48,885 - #40 ]
INFO  10:40:48,885 - #33 ;
INFO  10:40:48,885 - #44 val
INFO  10:40:48,885 - #36 .
INFO  10:40:48,885 - #44 neg
INFO  10:40:48,885 - #30 =
INFO  10:40:48,885 - #7 new
INFO  10:40:48,885 - #44 int
INFO  10:40:48,885 - #39 [
INFO  10:40:48,885 - #44 sizes
INFO  10:40:48,885 - #34 :
INFO  10:40:48,885 - #34 :
INFO  10:40:48,885 - #44 tableSize
INFO  10:40:48,886 - #40 ]
INFO  10:40:48,886 - #33 ;
INFO  10:40:48,886 - #9 read
INFO  10:40:48,886 - #37 (
INFO  10:40:48,886 - #44 x
INFO  10:40:48,886 - #38 )
INFO  10:40:48,886 - #33 ;
INFO  10:40:48,886 - #14 for
INFO  10:40:48,886 - #37 (
INFO  10:40:48,886 - #33 ;
INFO  10:40:48,886 - #44 i
INFO  10:40:48,886 - #26 <
INFO  10:40:48,886 - #44 sizes
INFO  10:40:48,886 - #34 :
INFO  10:40:48,886 - #34 :
INFO  10:40:48,886 - #44 tableSize
INFO  10:40:48,886 - #33 ;
INFO  10:40:48,886 - #44 i
INFO  10:40:48,887 - #31 ++
INFO  10:40:48,887 - #38 )
INFO  10:40:48,887 - #41 {
INFO  10:40:48,887 - #44 val
INFO  10:40:48,887 - #36 .
INFO  10:40:48,887 - #44 putp
INFO  10:40:48,887 - #37 (
INFO  10:40:48,887 - #45 0
INFO  10:40:48,887 - #35 ,
INFO  10:40:48,887 - #44 i
INFO  10:40:48,887 - #38 )
INFO  10:40:48,887 - #33 ;
INFO  10:40:48,887 - #44 val
INFO  10:40:48,887 - #36 .
INFO  10:40:48,887 - #44 putn
INFO  10:40:48,887 - #37 (
INFO  10:40:48,887 - #45 0
INFO  10:40:48,887 - #35 ,
INFO  10:40:48,887 - #44 i
INFO  10:40:48,887 - #38 )
INFO  10:40:48,887 - #33 ;
INFO  10:40:48,887 - #42 }
INFO  10:40:48,887 - #44 f
INFO  10:40:48,887 - #37 (
INFO  10:40:48,887 - #44 c
INFO  10:40:48,887 - #35 ,
INFO  10:40:48,887 - #44 x
INFO  10:40:48,887 - #35 ,
INFO  10:40:48,887 - #44 i
INFO  10:40:48,889 - #38 )
INFO  10:40:48,889 - #33 ;
INFO  10:40:48,889 - #9 read
INFO  10:40:48,889 - #37 (
INFO  10:40:48,889 - #44 rows
INFO  10:40:48,889 - #38 )
INFO  10:40:48,889 - #33 ;
INFO  10:40:48,889 - #44 x
INFO  10:40:48,889 - #30 =
INFO  10:40:48,889 - #44 rows
INFO  10:40:48,889 - #33 ;
INFO  10:40:48,889 - #14 for
INFO  10:40:48,889 - #37 (
INFO  10:40:48,889 - #33 ;
INFO  10:40:48,889 - #33 ;
INFO  10:40:48,889 - #38 )
INFO  10:40:48,889 - #41 {
INFO  10:40:48,889 - #6 if
INFO  10:40:48,889 - #37 (
INFO  10:40:48,890 - #44 x
INFO  10:40:48,890 - #27 <=
INFO  10:40:48,890 - #45 0
INFO  10:40:48,890 - #38 )
INFO  10:40:48,890 - #2 break
INFO  10:40:48,890 - #33 ;
INFO  10:40:48,890 - #6 if
INFO  10:40:48,890 - #37 (
INFO  10:40:48,890 - #45 0
INFO  10:40:48,890 - #27 <=
INFO  10:40:48,890 - #44 x
INFO  10:40:48,890 - #28 &&
INFO  10:40:48,890 - #44 x
INFO  10:40:48,890 - #26 <
INFO  10:40:48,890 - #44 sizes
INFO  10:40:48,890 - #34 :
INFO  10:40:48,890 - #34 :
INFO  10:40:48,890 - #44 tableSize
INFO  10:40:48,890 - #38 )
INFO  10:40:48,890 - #41 {
INFO  10:40:48,890 - #44 val
INFO  10:40:48,890 - #36 .
INFO  10:40:48,890 - #44 putp
INFO  10:40:48,890 - #37 (
INFO  10:40:48,890 - #44 val
INFO  10:40:48,890 - #36 .
INFO  10:40:48,890 - #44 getp
INFO  10:40:48,891 - #37 (
INFO  10:40:48,891 - #44 x
INFO  10:40:48,891 - #38 )
INFO  10:40:48,891 - #17 +
INFO  10:40:48,891 - #45 1
INFO  10:40:48,891 - #38 )
INFO  10:40:48,891 - #33 ;
INFO  10:40:48,891 - #42 }
INFO  10:40:48,891 - #4 else
INFO  10:40:48,891 - #6 if
INFO  10:40:48,892 - #37 (
INFO  10:40:48,892 - #18 -
INFO  10:40:48,892 - #44 sizes
INFO  10:40:48,892 - #34 :
INFO  10:40:48,892 - #34 :
INFO  10:40:48,892 - #44 tableSize
INFO  10:40:48,892 - #26 <
INFO  10:40:48,892 - #44 x
INFO  10:40:48,892 - #28 &&
INFO  10:40:48,892 - #44 x
INFO  10:40:48,892 - #26 <
INFO  10:40:48,892 - #45 0
INFO  10:40:48,893 - #38 )
INFO  10:40:48,893 - #41 {
INFO  10:40:48,893 - #44 val
INFO  10:40:48,893 - #36 .
INFO  10:40:48,893 - #44 putn
INFO  10:40:48,893 - #37 (
INFO  10:40:48,893 - #44 val
INFO  10:40:48,893 - #36 .
INFO  10:40:48,893 - #44 getn
INFO  10:40:48,893 - #37 (
INFO  10:40:48,893 - #18 -
INFO  10:40:48,893 - #44 x
INFO  10:40:48,893 - #38 )
INFO  10:40:48,894 - #17 +
INFO  10:40:48,894 - #45 1
INFO  10:40:48,894 - #38 )
INFO  10:40:48,894 - #33 ;
INFO  10:40:48,894 - #42 }
INFO  10:40:48,894 - #9 read
INFO  10:40:48,894 - #37 (
INFO  10:40:48,894 - #44 x
INFO  10:40:48,894 - #38 )
INFO  10:40:48,894 - #33 ;
INFO  10:40:48,894 - #42 }
INFO  10:40:48,894 - #42 }
INFO  10:40:48,894 - #42 }
INFO  10:40:48,895 - #44 char
INFO  10:40:48,895 - #44 c
INFO  10:40:48,895 - #30 =
INFO  10:40:48,895 - #44 a
