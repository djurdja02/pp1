INFO  10:41:19,650 - Compiling source file: C:\Users\Laptop\Desktop\pp1\workspace\MJCompiler\test\program.mj
INFO  10:41:19,655 - #1 program
INFO  10:41:19,655 - #44 p
INFO  10:41:19,655 - #16 namespace
INFO  10:41:19,655 - #44 sizes
INFO  10:41:19,656 - #41 {
INFO  10:41:19,656 - #5 const
INFO  10:41:19,656 - #44 int
INFO  10:41:19,656 - #44 tableSize
INFO  10:41:19,656 - #30 =
INFO  10:41:19,656 - #45 10
INFO  10:41:19,656 - #33 ;
INFO  10:41:19,656 - #41 {
INFO  10:41:19,656 - #42 }
INFO  10:41:19,656 - #42 }
INFO  10:41:19,657 - #3 class
INFO  10:41:19,657 - #44 Table
INFO  10:41:19,657 - #41 {
INFO  10:41:19,657 - #44 int
INFO  10:41:19,657 - #44 pos
INFO  10:41:19,657 - #39 [
INFO  10:41:19,657 - #40 ]
INFO  10:41:19,658 - #35 ,
INFO  10:41:19,658 - #44 neg
INFO  10:41:19,658 - #39 [
INFO  10:41:19,658 - #40 ]
INFO  10:41:19,658 - #35 ,
INFO  10:41:19,658 - #44 factor
INFO  10:41:19,658 - #33 ;
INFO  10:41:19,658 - #15 static
INFO  10:41:19,658 - #44 int
INFO  10:41:19,658 - #44 id
INFO  10:41:19,658 - #33 ;
INFO  10:41:19,659 - #15 static
INFO  10:41:19,659 - #41 {
INFO  10:41:19,659 - #44 id
INFO  10:41:19,659 - #30 =
INFO  10:41:19,659 - #45 0
INFO  10:41:19,659 - #33 ;
INFO  10:41:19,659 - #42 }
INFO  10:41:19,659 - #41 {
INFO  10:41:19,659 - #11 void
INFO  10:41:19,659 - #44 setfactor
INFO  10:41:19,660 - #37 (
INFO  10:41:19,660 - #44 int
INFO  10:41:19,660 - #44 factor
INFO  10:41:19,660 - #38 )
INFO  10:41:19,660 - #41 {
INFO  10:41:19,660 - #44 this
INFO  10:41:19,660 - #36 .
INFO  10:41:19,660 - #44 factor
INFO  10:41:19,660 - #30 =
INFO  10:41:19,660 - #44 factor
INFO  10:41:19,660 - #33 ;
INFO  10:41:19,660 - #42 }
INFO  10:41:19,660 - #11 void
INFO  10:41:19,661 - #44 putp
INFO  10:41:19,661 - #37 (
INFO  10:41:19,661 - #44 int
INFO  10:41:19,661 - #44 a
INFO  10:41:19,661 - #35 ,
INFO  10:41:19,661 - #44 int
INFO  10:41:19,661 - #44 idx
INFO  10:41:19,661 - #38 )
INFO  10:41:19,661 - #41 {
INFO  10:41:19,661 - #44 this
INFO  10:41:19,662 - #36 .
INFO  10:41:19,662 - #44 pos
INFO  10:41:19,662 - #39 [
INFO  10:41:19,662 - #44 idx
INFO  10:41:19,662 - #40 ]
INFO  10:41:19,662 - #30 =
INFO  10:41:19,662 - #44 a
INFO  10:41:19,662 - #33 ;
INFO  10:41:19,662 - #42 }
INFO  10:41:19,662 - #11 void
INFO  10:41:19,662 - #44 putn
INFO  10:41:19,662 - #37 (
INFO  10:41:19,662 - #44 int
INFO  10:41:19,662 - #44 a
INFO  10:41:19,662 - #35 ,
INFO  10:41:19,663 - #44 int
INFO  10:41:19,663 - #44 idx
INFO  10:41:19,663 - #38 )
INFO  10:41:19,663 - #41 {
INFO  10:41:19,663 - #44 this
INFO  10:41:19,663 - #36 .
INFO  10:41:19,663 - #44 neg
INFO  10:41:19,663 - #39 [
INFO  10:41:19,663 - #44 idx
INFO  10:41:19,663 - #40 ]
INFO  10:41:19,663 - #30 =
INFO  10:41:19,663 - #44 a
INFO  10:41:19,664 - #33 ;
INFO  10:41:19,664 - #42 }
INFO  10:41:19,664 - #44 int
INFO  10:41:19,664 - #44 getp
INFO  10:41:19,664 - #37 (
INFO  10:41:19,664 - #44 int
INFO  10:41:19,664 - #44 idx
INFO  10:41:19,664 - #38 )
INFO  10:41:19,664 - #41 {
INFO  10:41:19,664 - #10 return
INFO  10:41:19,664 - #44 pos
INFO  10:41:19,664 - #39 [
INFO  10:41:19,665 - #44 idx
INFO  10:41:19,665 - #40 ]
INFO  10:41:19,665 - #33 ;
INFO  10:41:19,665 - #42 }
INFO  10:41:19,665 - #44 int
INFO  10:41:19,665 - #44 getn
INFO  10:41:19,665 - #37 (
INFO  10:41:19,665 - #44 int
INFO  10:41:19,665 - #44 idx
INFO  10:41:19,665 - #38 )
INFO  10:41:19,665 - #41 {
INFO  10:41:19,665 - #10 return
INFO  10:41:19,665 - #44 neg
INFO  10:41:19,665 - #39 [
INFO  10:41:19,666 - #44 idx
INFO  10:41:19,666 - #40 ]
INFO  10:41:19,666 - #33 ;
INFO  10:41:19,666 - #42 }
INFO  10:41:19,666 - #42 }
INFO  10:41:19,666 - #42 }
INFO  10:41:19,666 - #44 Table
INFO  10:41:19,666 - #44 val
INFO  10:41:19,666 - #33 ;
INFO  10:41:19,666 - #44 int
INFO  10:41:19,666 - #44 rows
INFO  10:41:19,666 - #35 ,
INFO  10:41:19,667 - #44 columns
INFO  10:41:19,667 - #33 ;
INFO  10:41:19,667 - #41 {
INFO  10:41:19,667 - #11 void
INFO  10:41:19,667 - #44 f
INFO  10:41:19,667 - #37 (
INFO  10:41:19,668 - #44 char
INFO  10:41:19,668 - #44 ch
INFO  10:41:19,668 - #35 ,
INFO  10:41:19,668 - #44 int
INFO  10:41:19,668 - #44 a
INFO  10:41:19,668 - #35 ,
INFO  10:41:19,668 - #44 int
INFO  10:41:19,668 - #44 arg
INFO  10:41:19,668 - #38 )
INFO  10:41:19,669 - #44 int
INFO  10:41:19,669 - #44 x
INFO  10:41:19,669 - #33 ;
INFO  10:41:19,669 - #41 {
INFO  10:41:19,669 - #44 x
INFO  10:41:19,669 - #30 =
INFO  10:41:19,669 - #44 arg
INFO  10:41:19,669 - #33 ;
INFO  10:41:19,669 - #42 }
INFO  10:41:19,669 - #11 void
INFO  10:41:19,669 - #44 main
INFO  10:41:19,669 - #37 (
INFO  10:41:19,669 - #38 )
INFO  10:41:19,669 - #44 int
INFO  10:41:19,670 - #44 x
INFO  10:41:19,670 - #35 ,
INFO  10:41:19,670 - #44 i
INFO  10:41:19,670 - #33 ;
INFO  10:41:19,670 - #44 char
INFO  10:41:19,670 - #44 c
INFO  10:41:19,670 - #35 ,
INFO  10:41:19,670 - #44 int
INFO  10:41:19,670 - #39 [
INFO  10:41:19,670 - #40 ]
INFO  10:41:19,670 - #44 arr
INFO  10:41:19,671 - #33 ;
INFO  10:41:19,671 - #41 {
INFO  10:41:19,671 - #44 val
INFO  10:41:19,671 - #30 =
INFO  10:41:19,671 - #7 new
INFO  10:41:19,671 - #44 Table
INFO  10:41:19,671 - #37 (
INFO  10:41:19,671 - #38 )
INFO  10:41:19,671 - #33 ;
INFO  10:41:19,671 - #44 val
INFO  10:41:19,672 - #36 .
INFO  10:41:19,672 - #44 setfactor
INFO  10:41:19,672 - #37 (
INFO  10:41:19,672 - #45 2
INFO  10:41:19,672 - #38 )
INFO  10:41:19,672 - #33 ;
INFO  10:41:19,672 - #44 arr
INFO  10:41:19,672 - #30 =
INFO  10:41:19,673 - #7 new
INFO  10:41:19,673 - #44 int
INFO  10:41:19,673 - #39 [
INFO  10:41:19,673 - #45 3
INFO  10:41:19,673 - #40 ]
INFO  10:41:19,673 - #33 ;
INFO  10:41:19,673 - #14 for
INFO  10:41:19,673 - #37 (
INFO  10:41:19,673 - #44 i
INFO  10:41:19,673 - #30 =
INFO  10:41:19,673 - #45 0
INFO  10:41:19,674 - #33 ;
INFO  10:41:19,674 - #44 i
INFO  10:41:19,674 - #26 <
INFO  10:41:19,674 - #45 3
INFO  10:41:19,674 - #33 ;
INFO  10:41:19,674 - #44 i
INFO  10:41:19,674 - #31 ++
INFO  10:41:19,674 - #38 )
INFO  10:41:19,674 - #41 {
INFO  10:41:19,675 - #44 arr
INFO  10:41:19,675 - #39 [
INFO  10:41:19,675 - #44 i
INFO  10:41:19,675 - #40 ]
INFO  10:41:19,675 - #30 =
INFO  10:41:19,675 - #44 i
INFO  10:41:19,675 - #33 ;
INFO  10:41:19,675 - #42 }
INFO  10:41:19,675 - #14 for
INFO  10:41:19,676 - #37 (
INFO  10:41:19,676 - #44 i
INFO  10:41:19,676 - #30 =
INFO  10:41:19,676 - #45 0
INFO  10:41:19,676 - #33 ;
INFO  10:41:19,676 - #44 i
INFO  10:41:19,676 - #26 <
INFO  10:41:19,676 - #45 3
INFO  10:41:19,676 - #33 ;
INFO  10:41:19,676 - #44 i
INFO  10:41:19,676 - #31 ++
INFO  10:41:19,677 - #38 )
INFO  10:41:19,677 - #8 print
INFO  10:41:19,677 - #37 (
INFO  10:41:19,677 - #44 arr
INFO  10:41:19,677 - #39 [
INFO  10:41:19,677 - #44 i
INFO  10:41:19,677 - #40 ]
INFO  10:41:19,677 - #38 )
INFO  10:41:19,677 - #33 ;
INFO  10:41:19,678 - #44 val
INFO  10:41:19,678 - #36 .
INFO  10:41:19,678 - #44 pos
INFO  10:41:19,678 - #30 =
INFO  10:41:19,678 - #7 new
INFO  10:41:19,678 - #44 int
INFO  10:41:19,678 - #39 [
INFO  10:41:19,678 - #44 sizes
INFO  10:41:19,678 - #34 :
INFO  10:41:19,679 - #34 :
INFO  10:41:19,679 - #44 tableSize
INFO  10:41:19,679 - #40 ]
INFO  10:41:19,679 - #33 ;
INFO  10:41:19,679 - #44 val
INFO  10:41:19,679 - #36 .
INFO  10:41:19,679 - #44 neg
INFO  10:41:19,679 - #30 =
INFO  10:41:19,679 - #7 new
INFO  10:41:19,679 - #44 int
INFO  10:41:19,679 - #39 [
INFO  10:41:19,680 - #44 sizes
INFO  10:41:19,680 - #34 :
INFO  10:41:19,680 - #34 :
INFO  10:41:19,680 - #44 tableSize
INFO  10:41:19,680 - #40 ]
INFO  10:41:19,680 - #33 ;
INFO  10:41:19,680 - #9 read
INFO  10:41:19,680 - #37 (
INFO  10:41:19,680 - #44 x
INFO  10:41:19,680 - #38 )
INFO  10:41:19,680 - #33 ;
INFO  10:41:19,680 - #14 for
INFO  10:41:19,680 - #37 (
INFO  10:41:19,680 - #33 ;
INFO  10:41:19,681 - #44 i
INFO  10:41:19,681 - #26 <
INFO  10:41:19,681 - #44 sizes
INFO  10:41:19,681 - #34 :
INFO  10:41:19,681 - #34 :
INFO  10:41:19,681 - #44 tableSize
INFO  10:41:19,681 - #33 ;
INFO  10:41:19,681 - #44 i
INFO  10:41:19,681 - #31 ++
INFO  10:41:19,681 - #38 )
INFO  10:41:19,681 - #41 {
INFO  10:41:19,681 - #44 val
INFO  10:41:19,681 - #36 .
INFO  10:41:19,681 - #44 putp
INFO  10:41:19,681 - #37 (
INFO  10:41:19,682 - #45 0
INFO  10:41:19,682 - #35 ,
INFO  10:41:19,682 - #44 i
INFO  10:41:19,682 - #38 )
INFO  10:41:19,682 - #33 ;
INFO  10:41:19,682 - #44 val
INFO  10:41:19,682 - #36 .
INFO  10:41:19,682 - #44 putn
INFO  10:41:19,682 - #37 (
INFO  10:41:19,682 - #45 0
INFO  10:41:19,682 - #35 ,
INFO  10:41:19,682 - #44 i
INFO  10:41:19,682 - #38 )
INFO  10:41:19,682 - #33 ;
INFO  10:41:19,682 - #42 }
INFO  10:41:19,682 - #44 f
INFO  10:41:19,683 - #37 (
INFO  10:41:19,683 - #44 c
INFO  10:41:19,683 - #35 ,
INFO  10:41:19,683 - #44 x
INFO  10:41:19,683 - #35 ,
INFO  10:41:19,683 - #44 i
INFO  10:41:19,683 - #38 )
INFO  10:41:19,683 - #33 ;
INFO  10:41:19,683 - #9 read
INFO  10:41:19,683 - #37 (
INFO  10:41:19,683 - #44 rows
INFO  10:41:19,683 - #38 )
INFO  10:41:19,683 - #33 ;
INFO  10:41:19,683 - #44 x
INFO  10:41:19,683 - #30 =
INFO  10:41:19,683 - #44 rows
INFO  10:41:19,684 - #33 ;
INFO  10:41:19,684 - #14 for
INFO  10:41:19,684 - #37 (
INFO  10:41:19,684 - #33 ;
INFO  10:41:19,684 - #33 ;
INFO  10:41:19,684 - #38 )
INFO  10:41:19,684 - #41 {
INFO  10:41:19,684 - #6 if
INFO  10:41:19,684 - #37 (
INFO  10:41:19,684 - #44 x
INFO  10:41:19,684 - #27 <=
INFO  10:41:19,684 - #45 0
INFO  10:41:19,684 - #38 )
INFO  10:41:19,684 - #2 break
INFO  10:41:19,685 - #33 ;
INFO  10:41:19,685 - #6 if
INFO  10:41:19,685 - #37 (
INFO  10:41:19,685 - #45 0
INFO  10:41:19,685 - #27 <=
INFO  10:41:19,685 - #44 x
INFO  10:41:19,685 - #28 &&
INFO  10:41:19,685 - #44 x
INFO  10:41:19,685 - #26 <
INFO  10:41:19,685 - #44 sizes
INFO  10:41:19,685 - #34 :
INFO  10:41:19,685 - #34 :
INFO  10:41:19,685 - #44 tableSize
INFO  10:41:19,685 - #38 )
INFO  10:41:19,685 - #41 {
INFO  10:41:19,685 - #44 val
INFO  10:41:19,685 - #36 .
INFO  10:41:19,685 - #44 putp
INFO  10:41:19,686 - #37 (
INFO  10:41:19,686 - #44 val
INFO  10:41:19,686 - #36 .
INFO  10:41:19,686 - #44 getp
INFO  10:41:19,686 - #37 (
INFO  10:41:19,686 - #44 x
INFO  10:41:19,686 - #38 )
INFO  10:41:19,686 - #17 +
INFO  10:41:19,686 - #45 1
INFO  10:41:19,686 - #38 )
INFO  10:41:19,686 - #33 ;
INFO  10:41:19,686 - #42 }
INFO  10:41:19,686 - #4 else
INFO  10:41:19,686 - #6 if
INFO  10:41:19,686 - #37 (
INFO  10:41:19,686 - #18 -
INFO  10:41:19,686 - #44 sizes
INFO  10:41:19,686 - #34 :
INFO  10:41:19,686 - #34 :
INFO  10:41:19,687 - #44 tableSize
INFO  10:41:19,687 - #26 <
INFO  10:41:19,687 - #44 x
INFO  10:41:19,687 - #28 &&
INFO  10:41:19,687 - #44 x
INFO  10:41:19,687 - #26 <
INFO  10:41:19,687 - #45 0
INFO  10:41:19,687 - #38 )
INFO  10:41:19,687 - #41 {
INFO  10:41:19,687 - #44 val
INFO  10:41:19,687 - #36 .
INFO  10:41:19,687 - #44 putn
INFO  10:41:19,687 - #37 (
INFO  10:41:19,687 - #44 val
INFO  10:41:19,687 - #36 .
INFO  10:41:19,687 - #44 getn
INFO  10:41:19,687 - #37 (
INFO  10:41:19,688 - #18 -
INFO  10:41:19,688 - #44 x
INFO  10:41:19,688 - #38 )
INFO  10:41:19,688 - #17 +
INFO  10:41:19,688 - #45 1
INFO  10:41:19,688 - #38 )
INFO  10:41:19,688 - #33 ;
INFO  10:41:19,688 - #42 }
INFO  10:41:19,688 - #9 read
INFO  10:41:19,688 - #37 (
INFO  10:41:19,688 - #44 x
INFO  10:41:19,688 - #38 )
INFO  10:41:19,688 - #33 ;
INFO  10:41:19,688 - #42 }
INFO  10:41:19,688 - #42 }
INFO  10:41:19,688 - #42 }
INFO  10:41:19,688 - #44 char
INFO  10:41:19,688 - #44 c
INFO  10:41:19,688 - #30 =
INFO  10:41:19,689 - #44 a
