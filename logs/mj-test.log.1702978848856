INFO  10:40:33,657 - Compiling source file: C:\Users\Laptop\Desktop\pp1\workspace\MJCompiler\test\program.mj
INFO  10:40:33,663 - #1 program
INFO  10:40:33,664 - #44 p
INFO  10:40:33,664 - #16 namespace
INFO  10:40:33,664 - #44 sizes
INFO  10:40:33,664 - #41 {
INFO  10:40:33,664 - #5 const
INFO  10:40:33,664 - #44 int
INFO  10:40:33,664 - #44 tableSize
INFO  10:40:33,664 - #30 =
INFO  10:40:33,665 - #45 10
INFO  10:40:33,665 - #33 ;
INFO  10:40:33,665 - #41 {
INFO  10:40:33,665 - #42 }
INFO  10:40:33,665 - #42 }
INFO  10:40:33,665 - #3 class
INFO  10:40:33,665 - #44 Table
INFO  10:40:33,665 - #41 {
INFO  10:40:33,666 - #44 int
INFO  10:40:33,666 - #44 pos
INFO  10:40:33,666 - #39 [
INFO  10:40:33,666 - #40 ]
INFO  10:40:33,666 - #35 ,
INFO  10:40:33,666 - #44 neg
INFO  10:40:33,666 - #39 [
INFO  10:40:33,666 - #40 ]
INFO  10:40:33,667 - #35 ,
INFO  10:40:33,667 - #44 factor
INFO  10:40:33,667 - #33 ;
INFO  10:40:33,667 - #15 static
INFO  10:40:33,667 - #44 int
INFO  10:40:33,667 - #44 id
INFO  10:40:33,667 - #33 ;
INFO  10:40:33,667 - #15 static
INFO  10:40:33,667 - #41 {
INFO  10:40:33,667 - #44 id
INFO  10:40:33,667 - #30 =
INFO  10:40:33,667 - #45 0
INFO  10:40:33,667 - #33 ;
INFO  10:40:33,667 - #42 }
INFO  10:40:33,667 - #41 {
INFO  10:40:33,667 - #11 void
INFO  10:40:33,669 - #44 setfactor
INFO  10:40:33,669 - #37 (
INFO  10:40:33,669 - #44 int
INFO  10:40:33,669 - #44 factor
INFO  10:40:33,669 - #38 )
INFO  10:40:33,669 - #41 {
INFO  10:40:33,669 - #44 this
INFO  10:40:33,669 - #36 .
INFO  10:40:33,669 - #44 factor
INFO  10:40:33,670 - #30 =
INFO  10:40:33,670 - #44 factor
INFO  10:40:33,670 - #33 ;
INFO  10:40:33,670 - #42 }
INFO  10:40:33,670 - #11 void
INFO  10:40:33,670 - #44 putp
INFO  10:40:33,670 - #37 (
INFO  10:40:33,670 - #44 int
INFO  10:40:33,670 - #44 a
INFO  10:40:33,670 - #35 ,
INFO  10:40:33,670 - #44 int
INFO  10:40:33,670 - #44 idx
INFO  10:40:33,670 - #38 )
INFO  10:40:33,671 - #41 {
INFO  10:40:33,671 - #44 this
INFO  10:40:33,671 - #36 .
INFO  10:40:33,671 - #44 pos
INFO  10:40:33,671 - #39 [
INFO  10:40:33,671 - #44 idx
INFO  10:40:33,671 - #40 ]
INFO  10:40:33,671 - #30 =
INFO  10:40:33,671 - #44 a
INFO  10:40:33,671 - #33 ;
INFO  10:40:33,671 - #42 }
INFO  10:40:33,671 - #11 void
INFO  10:40:33,671 - #44 putn
INFO  10:40:33,671 - #37 (
INFO  10:40:33,671 - #44 int
INFO  10:40:33,672 - #44 a
INFO  10:40:33,672 - #35 ,
INFO  10:40:33,672 - #44 int
INFO  10:40:33,672 - #44 idx
INFO  10:40:33,672 - #38 )
INFO  10:40:33,672 - #41 {
INFO  10:40:33,672 - #44 this
INFO  10:40:33,672 - #36 .
INFO  10:40:33,672 - #44 neg
INFO  10:40:33,672 - #39 [
INFO  10:40:33,672 - #44 idx
INFO  10:40:33,672 - #40 ]
INFO  10:40:33,672 - #30 =
INFO  10:40:33,672 - #44 a
INFO  10:40:33,672 - #33 ;
INFO  10:40:33,672 - #42 }
INFO  10:40:33,672 - #44 int
INFO  10:40:33,673 - #44 getp
INFO  10:40:33,673 - #37 (
INFO  10:40:33,673 - #44 int
INFO  10:40:33,673 - #44 idx
INFO  10:40:33,673 - #38 )
INFO  10:40:33,673 - #41 {
INFO  10:40:33,673 - #10 return
INFO  10:40:33,673 - #44 pos
INFO  10:40:33,673 - #39 [
INFO  10:40:33,673 - #44 idx
INFO  10:40:33,673 - #40 ]
INFO  10:40:33,673 - #33 ;
INFO  10:40:33,673 - #42 }
INFO  10:40:33,673 - #44 int
INFO  10:40:33,673 - #44 getn
INFO  10:40:33,673 - #37 (
INFO  10:40:33,673 - #44 int
INFO  10:40:33,674 - #44 idx
INFO  10:40:33,674 - #38 )
INFO  10:40:33,674 - #41 {
INFO  10:40:33,674 - #10 return
INFO  10:40:33,674 - #44 neg
INFO  10:40:33,674 - #39 [
INFO  10:40:33,674 - #44 idx
INFO  10:40:33,674 - #40 ]
INFO  10:40:33,676 - #33 ;
INFO  10:40:33,676 - #42 }
INFO  10:40:33,676 - #42 }
INFO  10:40:33,676 - #42 }
INFO  10:40:33,676 - #44 Table
INFO  10:40:33,676 - #44 val
INFO  10:40:33,676 - #33 ;
INFO  10:40:33,676 - #44 int
INFO  10:40:33,676 - #44 rows
INFO  10:40:33,676 - #35 ,
INFO  10:40:33,676 - #44 columns
INFO  10:40:33,676 - #33 ;
INFO  10:40:33,677 - #41 {
INFO  10:40:33,677 - #11 void
INFO  10:40:33,677 - #44 f
INFO  10:40:33,677 - #37 (
INFO  10:40:33,677 - #44 char
INFO  10:40:33,677 - #44 ch
INFO  10:40:33,677 - #35 ,
INFO  10:40:33,677 - #44 int
INFO  10:40:33,677 - #44 a
INFO  10:40:33,677 - #35 ,
INFO  10:40:33,677 - #44 int
INFO  10:40:33,677 - #44 arg
INFO  10:40:33,677 - #38 )
INFO  10:40:33,677 - #44 int
INFO  10:40:33,678 - #44 x
INFO  10:40:33,678 - #33 ;
INFO  10:40:33,678 - #41 {
INFO  10:40:33,678 - #44 x
INFO  10:40:33,678 - #30 =
INFO  10:40:33,678 - #44 arg
INFO  10:40:33,678 - #33 ;
INFO  10:40:33,678 - #42 }
INFO  10:40:33,678 - #11 void
INFO  10:40:33,678 - #44 main
INFO  10:40:33,678 - #37 (
INFO  10:40:33,678 - #38 )
INFO  10:40:33,678 - #44 int
INFO  10:40:33,678 - #44 x
INFO  10:40:33,678 - #35 ,
INFO  10:40:33,678 - #44 i
INFO  10:40:33,678 - #33 ;
INFO  10:40:33,678 - #44 char
INFO  10:40:33,678 - #44 c
INFO  10:40:33,679 - #35 ,
INFO  10:40:33,679 - #44 int
INFO  10:40:33,679 - #39 [
INFO  10:40:33,679 - #40 ]
INFO  10:40:33,679 - #44 arr
INFO  10:40:33,679 - #33 ;
INFO  10:40:33,679 - #41 {
INFO  10:40:33,679 - #44 val
INFO  10:40:33,679 - #30 =
INFO  10:40:33,679 - #7 new
INFO  10:40:33,679 - #44 Table
INFO  10:40:33,679 - #37 (
INFO  10:40:33,679 - #38 )
INFO  10:40:33,679 - #33 ;
INFO  10:40:33,679 - #44 val
INFO  10:40:33,679 - #36 .
INFO  10:40:33,680 - #44 setfactor
INFO  10:40:33,680 - #37 (
INFO  10:40:33,680 - #45 2
INFO  10:40:33,680 - #38 )
INFO  10:40:33,680 - #33 ;
INFO  10:40:33,680 - #44 arr
INFO  10:40:33,680 - #30 =
INFO  10:40:33,680 - #7 new
INFO  10:40:33,680 - #44 int
INFO  10:40:33,680 - #39 [
INFO  10:40:33,680 - #45 3
INFO  10:40:33,680 - #40 ]
INFO  10:40:33,681 - #33 ;
INFO  10:40:33,681 - #14 for
INFO  10:40:33,681 - #37 (
INFO  10:40:33,681 - #44 i
INFO  10:40:33,681 - #30 =
INFO  10:40:33,681 - #45 0
INFO  10:40:33,681 - #33 ;
INFO  10:40:33,681 - #44 i
INFO  10:40:33,681 - #26 <
INFO  10:40:33,681 - #45 3
INFO  10:40:33,681 - #33 ;
INFO  10:40:33,681 - #44 i
INFO  10:40:33,681 - #31 ++
INFO  10:40:33,681 - #38 )
INFO  10:40:33,681 - #41 {
INFO  10:40:33,681 - #44 arr
INFO  10:40:33,681 - #39 [
INFO  10:40:33,681 - #44 i
INFO  10:40:33,683 - #40 ]
INFO  10:40:33,683 - #30 =
INFO  10:40:33,683 - #44 i
INFO  10:40:33,683 - #33 ;
INFO  10:40:33,683 - #42 }
INFO  10:40:33,683 - #14 for
INFO  10:40:33,683 - #37 (
INFO  10:40:33,683 - #44 i
INFO  10:40:33,683 - #30 =
INFO  10:40:33,683 - #45 0
INFO  10:40:33,683 - #33 ;
INFO  10:40:33,683 - #44 i
INFO  10:40:33,683 - #26 <
INFO  10:40:33,683 - #45 3
INFO  10:40:33,683 - #33 ;
INFO  10:40:33,683 - #44 i
INFO  10:40:33,683 - #31 ++
INFO  10:40:33,683 - #38 )
INFO  10:40:33,683 - #8 print
INFO  10:40:33,684 - #37 (
INFO  10:40:33,684 - #44 arr
INFO  10:40:33,684 - #39 [
INFO  10:40:33,684 - #44 i
INFO  10:40:33,684 - #40 ]
INFO  10:40:33,684 - #38 )
INFO  10:40:33,684 - #33 ;
INFO  10:40:33,684 - #44 val
INFO  10:40:33,684 - #36 .
INFO  10:40:33,684 - #44 pos
INFO  10:40:33,684 - #30 =
INFO  10:40:33,684 - #7 new
INFO  10:40:33,684 - #44 int
INFO  10:40:33,684 - #39 [
INFO  10:40:33,684 - #44 sizes
INFO  10:40:33,684 - #34 :
INFO  10:40:33,684 - #34 :
INFO  10:40:33,684 - #44 tableSize
INFO  10:40:33,684 - #40 ]
INFO  10:40:33,684 - #33 ;
INFO  10:40:33,685 - #44 val
INFO  10:40:33,685 - #36 .
INFO  10:40:33,685 - #44 neg
INFO  10:40:33,685 - #30 =
INFO  10:40:33,685 - #7 new
INFO  10:40:33,685 - #44 int
INFO  10:40:33,685 - #39 [
INFO  10:40:33,685 - #44 sizes
INFO  10:40:33,685 - #34 :
INFO  10:40:33,685 - #34 :
INFO  10:40:33,685 - #44 tableSize
INFO  10:40:33,685 - #40 ]
INFO  10:40:33,685 - #33 ;
INFO  10:40:33,685 - #9 read
INFO  10:40:33,685 - #37 (
INFO  10:40:33,685 - #44 x
INFO  10:40:33,685 - #38 )
INFO  10:40:33,685 - #33 ;
INFO  10:40:33,685 - #14 for
INFO  10:40:33,686 - #37 (
INFO  10:40:33,686 - #33 ;
INFO  10:40:33,686 - #44 i
INFO  10:40:33,686 - #26 <
INFO  10:40:33,686 - #44 sizes
INFO  10:40:33,686 - #34 :
INFO  10:40:33,686 - #34 :
INFO  10:40:33,686 - #44 tableSize
INFO  10:40:33,686 - #33 ;
INFO  10:40:33,686 - #44 i
INFO  10:40:33,686 - #31 ++
INFO  10:40:33,686 - #38 )
INFO  10:40:33,686 - #41 {
INFO  10:40:33,686 - #44 val
INFO  10:40:33,686 - #36 .
INFO  10:40:33,686 - #44 putp
INFO  10:40:33,686 - #37 (
INFO  10:40:33,686 - #45 0
INFO  10:40:33,687 - #35 ,
INFO  10:40:33,687 - #44 i
INFO  10:40:33,687 - #38 )
INFO  10:40:33,687 - #33 ;
INFO  10:40:33,687 - #44 val
INFO  10:40:33,688 - #36 .
INFO  10:40:33,688 - #44 putn
INFO  10:40:33,688 - #37 (
INFO  10:40:33,688 - #45 0
INFO  10:40:33,688 - #35 ,
INFO  10:40:33,688 - #44 i
INFO  10:40:33,688 - #38 )
INFO  10:40:33,688 - #33 ;
INFO  10:40:33,688 - #42 }
INFO  10:40:33,688 - #44 f
INFO  10:40:33,688 - #37 (
INFO  10:40:33,688 - #44 c
INFO  10:40:33,688 - #35 ,
INFO  10:40:33,688 - #44 x
INFO  10:40:33,688 - #35 ,
INFO  10:40:33,688 - #44 i
INFO  10:40:33,688 - #38 )
INFO  10:40:33,688 - #33 ;
INFO  10:40:33,689 - #9 read
INFO  10:40:33,689 - #37 (
INFO  10:40:33,689 - #44 rows
INFO  10:40:33,689 - #38 )
INFO  10:40:33,689 - #33 ;
INFO  10:40:33,689 - #44 x
INFO  10:40:33,689 - #30 =
INFO  10:40:33,689 - #44 rows
INFO  10:40:33,689 - #33 ;
INFO  10:40:33,689 - #14 for
INFO  10:40:33,689 - #37 (
INFO  10:40:33,689 - #33 ;
INFO  10:40:33,689 - #33 ;
INFO  10:40:33,689 - #38 )
INFO  10:40:33,689 - #41 {
INFO  10:40:33,689 - #6 if
INFO  10:40:33,689 - #37 (
INFO  10:40:33,689 - #44 x
INFO  10:40:33,689 - #27 <=
INFO  10:40:33,690 - #45 0
INFO  10:40:33,690 - #38 )
INFO  10:40:33,690 - #2 break
INFO  10:40:33,690 - #33 ;
INFO  10:40:33,690 - #6 if
INFO  10:40:33,690 - #37 (
INFO  10:40:33,690 - #45 0
INFO  10:40:33,690 - #27 <=
INFO  10:40:33,690 - #44 x
INFO  10:40:33,690 - #28 &&
INFO  10:40:33,690 - #44 x
INFO  10:40:33,690 - #26 <
INFO  10:40:33,690 - #44 sizes
INFO  10:40:33,691 - #34 :
INFO  10:40:33,691 - #34 :
INFO  10:40:33,691 - #44 tableSize
INFO  10:40:33,691 - #38 )
INFO  10:40:33,691 - #41 {
INFO  10:40:33,691 - #44 val
INFO  10:40:33,691 - #36 .
INFO  10:40:33,691 - #44 putp
INFO  10:40:33,691 - #37 (
INFO  10:40:33,692 - #44 val
INFO  10:40:33,692 - #36 .
INFO  10:40:33,692 - #44 getp
INFO  10:40:33,692 - #37 (
INFO  10:40:33,692 - #44 x
INFO  10:40:33,692 - #38 )
INFO  10:40:33,692 - #17 +
INFO  10:40:33,692 - #45 1
INFO  10:40:33,692 - #38 )
INFO  10:40:33,692 - #33 ;
INFO  10:40:33,692 - #42 }
INFO  10:40:33,692 - #4 else
INFO  10:40:33,692 - #6 if
INFO  10:40:33,692 - #37 (
INFO  10:40:33,692 - #18 -
INFO  10:40:33,692 - #44 sizes
INFO  10:40:33,692 - #34 :
INFO  10:40:33,692 - #34 :
INFO  10:40:33,692 - #44 tableSize
INFO  10:40:33,692 - #26 <
INFO  10:40:33,692 - #44 x
INFO  10:40:33,692 - #28 &&
INFO  10:40:33,692 - #44 x
INFO  10:40:33,692 - #26 <
INFO  10:40:33,692 - #45 0
INFO  10:40:33,692 - #38 )
INFO  10:40:33,692 - #41 {
INFO  10:40:33,692 - #44 val
INFO  10:40:33,692 - #36 .
INFO  10:40:33,694 - #44 putn
INFO  10:40:33,694 - #37 (
INFO  10:40:33,694 - #44 val
INFO  10:40:33,694 - #36 .
INFO  10:40:33,694 - #44 getn
INFO  10:40:33,694 - #37 (
INFO  10:40:33,694 - #18 -
INFO  10:40:33,694 - #44 x
INFO  10:40:33,694 - #38 )
INFO  10:40:33,694 - #17 +
INFO  10:40:33,694 - #45 1
INFO  10:40:33,694 - #38 )
INFO  10:40:33,694 - #33 ;
INFO  10:40:33,694 - #42 }
INFO  10:40:33,694 - #9 read
INFO  10:40:33,694 - #37 (
INFO  10:40:33,694 - #44 x
INFO  10:40:33,694 - #38 )
INFO  10:40:33,694 - #33 ;
INFO  10:40:33,694 - #42 }
INFO  10:40:33,694 - #42 }
INFO  10:40:33,694 - #42 }
INFO  10:40:33,695 - #44 char
INFO  10:40:33,695 - #44 c
INFO  10:40:33,695 - #30 =
INFO  10:40:33,695 - #44 a
