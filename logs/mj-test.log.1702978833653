INFO  16:02:28,468 - Compiling source file: C:\Users\Laptop\Desktop\pp1\workspace\MJCompiler\test\program.mj
INFO  16:02:28,473 - #1 program
INFO  16:02:28,474 - #44 p
INFO  16:02:28,474 - #16 namespace
INFO  16:02:28,474 - #44 sizes
INFO  16:02:28,474 - #41 {
INFO  16:02:28,474 - #5 const
INFO  16:02:28,474 - #44 int
INFO  16:02:28,474 - #44 tableSize
INFO  16:02:28,474 - #30 =
INFO  16:02:28,474 - #45 10
INFO  16:02:28,474 - #33 ;
INFO  16:02:28,474 - #41 {
INFO  16:02:28,474 - #42 }
INFO  16:02:28,474 - #42 }
INFO  16:02:28,475 - #3 class
INFO  16:02:28,475 - #44 Table
INFO  16:02:28,475 - #41 {
INFO  16:02:28,475 - #44 int
INFO  16:02:28,475 - #44 pos
INFO  16:02:28,475 - #39 [
INFO  16:02:28,475 - #40 ]
INFO  16:02:28,475 - #35 ,
INFO  16:02:28,476 - #44 neg
INFO  16:02:28,476 - #39 [
INFO  16:02:28,476 - #40 ]
INFO  16:02:28,476 - #35 ,
INFO  16:02:28,476 - #44 factor
INFO  16:02:28,476 - #33 ;
INFO  16:02:28,476 - #15 static
INFO  16:02:28,476 - #44 int
INFO  16:02:28,476 - #44 id
INFO  16:02:28,476 - #33 ;
INFO  16:02:28,476 - #15 static
INFO  16:02:28,476 - #41 {
INFO  16:02:28,476 - #44 id
INFO  16:02:28,476 - #30 =
INFO  16:02:28,476 - #45 0
INFO  16:02:28,478 - #33 ;
INFO  16:02:28,478 - #42 }
INFO  16:02:28,478 - #41 {
INFO  16:02:28,478 - #11 void
INFO  16:02:28,478 - #44 setfactor
INFO  16:02:28,478 - #37 (
INFO  16:02:28,478 - #44 int
INFO  16:02:28,478 - #44 factor
INFO  16:02:28,478 - #38 )
INFO  16:02:28,478 - #41 {
INFO  16:02:28,478 - #44 this
INFO  16:02:28,478 - #36 .
INFO  16:02:28,479 - #44 factor
INFO  16:02:28,479 - #30 =
INFO  16:02:28,479 - #44 factor
INFO  16:02:28,479 - #33 ;
INFO  16:02:28,479 - #42 }
INFO  16:02:28,479 - #11 void
INFO  16:02:28,479 - #44 putp
INFO  16:02:28,479 - #37 (
INFO  16:02:28,479 - #44 int
INFO  16:02:28,479 - #44 a
INFO  16:02:28,479 - #35 ,
INFO  16:02:28,479 - #44 int
INFO  16:02:28,480 - #44 idx
INFO  16:02:28,480 - #38 )
INFO  16:02:28,480 - #41 {
INFO  16:02:28,480 - #44 this
INFO  16:02:28,480 - #36 .
INFO  16:02:28,480 - #44 pos
INFO  16:02:28,480 - #39 [
INFO  16:02:28,480 - #44 idx
INFO  16:02:28,480 - #40 ]
INFO  16:02:28,480 - #30 =
INFO  16:02:28,480 - #44 a
INFO  16:02:28,481 - #33 ;
INFO  16:02:28,481 - #42 }
INFO  16:02:28,481 - #11 void
INFO  16:02:28,481 - #44 putn
INFO  16:02:28,481 - #37 (
INFO  16:02:28,481 - #44 int
INFO  16:02:28,481 - #44 a
INFO  16:02:28,481 - #35 ,
INFO  16:02:28,481 - #44 int
INFO  16:02:28,482 - #44 idx
INFO  16:02:28,482 - #38 )
INFO  16:02:28,482 - #41 {
INFO  16:02:28,482 - #44 this
INFO  16:02:28,482 - #36 .
INFO  16:02:28,482 - #44 neg
INFO  16:02:28,483 - #39 [
INFO  16:02:28,483 - #44 idx
INFO  16:02:28,483 - #40 ]
INFO  16:02:28,483 - #30 =
INFO  16:02:28,483 - #44 a
INFO  16:02:28,483 - #33 ;
INFO  16:02:28,483 - #42 }
INFO  16:02:28,483 - #44 int
INFO  16:02:28,484 - #44 getp
INFO  16:02:28,484 - #37 (
INFO  16:02:28,484 - #44 int
INFO  16:02:28,484 - #44 idx
INFO  16:02:28,484 - #38 )
INFO  16:02:28,484 - #41 {
INFO  16:02:28,484 - #10 return
INFO  16:02:28,485 - #44 pos
INFO  16:02:28,485 - #39 [
INFO  16:02:28,485 - #44 idx
INFO  16:02:28,485 - #40 ]
INFO  16:02:28,485 - #33 ;
INFO  16:02:28,485 - #42 }
INFO  16:02:28,485 - #44 int
INFO  16:02:28,485 - #44 getn
INFO  16:02:28,485 - #37 (
INFO  16:02:28,485 - #44 int
INFO  16:02:28,485 - #44 idx
INFO  16:02:28,485 - #38 )
INFO  16:02:28,485 - #41 {
INFO  16:02:28,486 - #10 return
INFO  16:02:28,486 - #44 neg
INFO  16:02:28,486 - #39 [
INFO  16:02:28,486 - #44 idx
INFO  16:02:28,486 - #40 ]
INFO  16:02:28,486 - #33 ;
INFO  16:02:28,486 - #42 }
INFO  16:02:28,487 - #42 }
INFO  16:02:28,487 - #42 }
INFO  16:02:28,487 - #44 Table
INFO  16:02:28,487 - #44 val
INFO  16:02:28,487 - #33 ;
INFO  16:02:28,487 - #44 int
INFO  16:02:28,487 - #44 rows
INFO  16:02:28,487 - #35 ,
INFO  16:02:28,487 - #44 columns
INFO  16:02:28,488 - #33 ;
INFO  16:02:28,488 - #41 {
INFO  16:02:28,488 - #11 void
INFO  16:02:28,488 - #44 f
INFO  16:02:28,488 - #37 (
INFO  16:02:28,488 - #44 char
INFO  16:02:28,488 - #44 ch
INFO  16:02:28,488 - #35 ,
INFO  16:02:28,489 - #44 int
INFO  16:02:28,489 - #44 a
INFO  16:02:28,489 - #35 ,
INFO  16:02:28,489 - #44 int
INFO  16:02:28,489 - #44 arg
INFO  16:02:28,489 - #38 )
INFO  16:02:28,489 - #44 int
INFO  16:02:28,489 - #44 x
INFO  16:02:28,489 - #33 ;
INFO  16:02:28,489 - #41 {
INFO  16:02:28,490 - #44 x
INFO  16:02:28,490 - #30 =
INFO  16:02:28,490 - #44 arg
INFO  16:02:28,490 - #33 ;
INFO  16:02:28,490 - #42 }
INFO  16:02:28,490 - #11 void
INFO  16:02:28,490 - #44 main
INFO  16:02:28,490 - #37 (
INFO  16:02:28,490 - #38 )
INFO  16:02:28,490 - #44 int
INFO  16:02:28,491 - #44 x
INFO  16:02:28,491 - #35 ,
INFO  16:02:28,491 - #44 i
INFO  16:02:28,491 - #33 ;
INFO  16:02:28,491 - #44 char
INFO  16:02:28,491 - #44 c
INFO  16:02:28,491 - #35 ,
INFO  16:02:28,491 - #44 int
INFO  16:02:28,491 - #39 [
INFO  16:02:28,491 - #40 ]
INFO  16:02:28,491 - #44 arr
INFO  16:02:28,492 - #33 ;
INFO  16:02:28,492 - #41 {
INFO  16:02:28,492 - #44 val
INFO  16:02:28,492 - #30 =
INFO  16:02:28,492 - #7 new
INFO  16:02:28,492 - #44 Table
INFO  16:02:28,492 - #37 (
INFO  16:02:28,492 - #38 )
INFO  16:02:28,493 - #33 ;
INFO  16:02:28,493 - #44 val
INFO  16:02:28,493 - #36 .
INFO  16:02:28,493 - #44 setfactor
INFO  16:02:28,493 - #37 (
INFO  16:02:28,493 - #45 2
INFO  16:02:28,493 - #38 )
INFO  16:02:28,493 - #33 ;
INFO  16:02:28,493 - #44 arr
INFO  16:02:28,493 - #30 =
INFO  16:02:28,494 - #7 new
INFO  16:02:28,494 - #44 int
INFO  16:02:28,494 - #39 [
INFO  16:02:28,494 - #45 3
INFO  16:02:28,494 - #40 ]
INFO  16:02:28,494 - #33 ;
INFO  16:02:28,494 - #14 for
INFO  16:02:28,494 - #37 (
INFO  16:02:28,494 - #44 i
INFO  16:02:28,494 - #30 =
INFO  16:02:28,494 - #45 0
INFO  16:02:28,494 - #33 ;
INFO  16:02:28,494 - #44 i
INFO  16:02:28,494 - #26 <
INFO  16:02:28,494 - #45 3
INFO  16:02:28,496 - #33 ;
INFO  16:02:28,496 - #44 i
INFO  16:02:28,496 - #31 ++
INFO  16:02:28,496 - #38 )
INFO  16:02:28,496 - #41 {
INFO  16:02:28,496 - #44 arr
INFO  16:02:28,496 - #39 [
INFO  16:02:28,496 - #44 i
INFO  16:02:28,496 - #40 ]
INFO  16:02:28,496 - #30 =
INFO  16:02:28,496 - #44 i
INFO  16:02:28,496 - #33 ;
INFO  16:02:28,496 - #42 }
INFO  16:02:28,496 - #14 for
INFO  16:02:28,496 - #37 (
INFO  16:02:28,497 - #44 i
INFO  16:02:28,497 - #30 =
INFO  16:02:28,497 - #45 0
INFO  16:02:28,497 - #33 ;
INFO  16:02:28,497 - #44 i
INFO  16:02:28,497 - #26 <
INFO  16:02:28,497 - #45 3
INFO  16:02:28,497 - #33 ;
INFO  16:02:28,497 - #44 i
INFO  16:02:28,497 - #31 ++
INFO  16:02:28,497 - #38 )
INFO  16:02:28,497 - #8 print
INFO  16:02:28,497 - #37 (
INFO  16:02:28,497 - #44 arr
INFO  16:02:28,498 - #39 [
INFO  16:02:28,498 - #44 i
INFO  16:02:28,498 - #40 ]
INFO  16:02:28,498 - #38 )
INFO  16:02:28,498 - #33 ;
INFO  16:02:28,498 - #44 val
INFO  16:02:28,498 - #36 .
INFO  16:02:28,498 - #44 pos
INFO  16:02:28,498 - #30 =
INFO  16:02:28,498 - #7 new
INFO  16:02:28,498 - #44 int
INFO  16:02:28,498 - #39 [
INFO  16:02:28,498 - #44 sizes
INFO  16:02:28,499 - #34 :
INFO  16:02:28,499 - #34 :
INFO  16:02:28,499 - #44 tableSize
INFO  16:02:28,499 - #40 ]
INFO  16:02:28,499 - #33 ;
INFO  16:02:28,499 - #44 val
INFO  16:02:28,499 - #36 .
INFO  16:02:28,499 - #44 neg
INFO  16:02:28,499 - #30 =
INFO  16:02:28,499 - #7 new
INFO  16:02:28,499 - #44 int
INFO  16:02:28,499 - #39 [
INFO  16:02:28,499 - #44 sizes
INFO  16:02:28,500 - #34 :
INFO  16:02:28,500 - #34 :
INFO  16:02:28,500 - #44 tableSize
INFO  16:02:28,500 - #40 ]
INFO  16:02:28,500 - #33 ;
INFO  16:02:28,500 - #9 read
INFO  16:02:28,500 - #37 (
INFO  16:02:28,501 - #44 x
INFO  16:02:28,501 - #38 )
INFO  16:02:28,501 - #33 ;
INFO  16:02:28,501 - #14 for
INFO  16:02:28,501 - #37 (
INFO  16:02:28,501 - #33 ;
INFO  16:02:28,501 - #44 i
INFO  16:02:28,501 - #26 <
INFO  16:02:28,501 - #44 sizes
INFO  16:02:28,501 - #34 :
INFO  16:02:28,501 - #34 :
INFO  16:02:28,501 - #44 tableSize
INFO  16:02:28,502 - #33 ;
INFO  16:02:28,502 - #44 i
INFO  16:02:28,502 - #31 ++
INFO  16:02:28,502 - #38 )
INFO  16:02:28,502 - #41 {
INFO  16:02:28,502 - #44 val
INFO  16:02:28,502 - #36 .
INFO  16:02:28,502 - #44 putp
INFO  16:02:28,502 - #37 (
INFO  16:02:28,503 - #45 0
INFO  16:02:28,503 - #35 ,
INFO  16:02:28,503 - #44 i
INFO  16:02:28,503 - #38 )
INFO  16:02:28,503 - #33 ;
INFO  16:02:28,503 - #44 val
INFO  16:02:28,503 - #36 .
INFO  16:02:28,503 - #44 putn
INFO  16:02:28,503 - #37 (
INFO  16:02:28,504 - #45 0
INFO  16:02:28,504 - #35 ,
INFO  16:02:28,504 - #44 i
INFO  16:02:28,504 - #38 )
INFO  16:02:28,504 - #33 ;
INFO  16:02:28,504 - #42 }
INFO  16:02:28,504 - #44 f
INFO  16:02:28,504 - #37 (
INFO  16:02:28,504 - #44 c
INFO  16:02:28,504 - #35 ,
INFO  16:02:28,504 - #44 x
INFO  16:02:28,504 - #35 ,
INFO  16:02:28,504 - #44 i
INFO  16:02:28,504 - #38 )
INFO  16:02:28,505 - #33 ;
INFO  16:02:28,505 - #9 read
INFO  16:02:28,505 - #37 (
INFO  16:02:28,505 - #44 rows
INFO  16:02:28,505 - #38 )
INFO  16:02:28,505 - #33 ;
INFO  16:02:28,505 - #44 x
INFO  16:02:28,505 - #30 =
INFO  16:02:28,505 - #44 rows
INFO  16:02:28,505 - #33 ;
INFO  16:02:28,506 - #14 for
INFO  16:02:28,506 - #37 (
INFO  16:02:28,506 - #33 ;
INFO  16:02:28,506 - #33 ;
INFO  16:02:28,506 - #38 )
INFO  16:02:28,506 - #41 {
INFO  16:02:28,506 - #6 if
INFO  16:02:28,506 - #37 (
INFO  16:02:28,506 - #44 x
INFO  16:02:28,506 - #27 <=
INFO  16:02:28,506 - #45 0
INFO  16:02:28,506 - #38 )
INFO  16:02:28,507 - #2 break
INFO  16:02:28,507 - #33 ;
INFO  16:02:28,507 - #6 if
INFO  16:02:28,507 - #37 (
INFO  16:02:28,507 - #45 0
INFO  16:02:28,507 - #27 <=
INFO  16:02:28,507 - #44 x
INFO  16:02:28,507 - #28 &&
INFO  16:02:28,507 - #44 x
INFO  16:02:28,508 - #26 <
INFO  16:02:28,508 - #44 sizes
INFO  16:02:28,508 - #34 :
INFO  16:02:28,508 - #34 :
INFO  16:02:28,508 - #44 tableSize
INFO  16:02:28,508 - #38 )
INFO  16:02:28,508 - #41 {
INFO  16:02:28,508 - #44 val
INFO  16:02:28,508 - #36 .
INFO  16:02:28,508 - #44 putp
INFO  16:02:28,508 - #37 (
INFO  16:02:28,509 - #44 val
INFO  16:02:28,509 - #36 .
INFO  16:02:28,509 - #44 getp
INFO  16:02:28,509 - #37 (
INFO  16:02:28,509 - #44 x
INFO  16:02:28,509 - #38 )
INFO  16:02:28,509 - #17 +
INFO  16:02:28,509 - #45 1
INFO  16:02:28,509 - #38 )
INFO  16:02:28,509 - #33 ;
INFO  16:02:28,509 - #42 }
INFO  16:02:28,509 - #4 else
INFO  16:02:28,509 - #6 if
INFO  16:02:28,510 - #37 (
INFO  16:02:28,510 - #18 -
INFO  16:02:28,510 - #44 sizes
INFO  16:02:28,510 - #34 :
INFO  16:02:28,510 - #34 :
INFO  16:02:28,510 - #44 tableSize
INFO  16:02:28,510 - #26 <
INFO  16:02:28,510 - #44 x
INFO  16:02:28,510 - #28 &&
INFO  16:02:28,510 - #44 x
INFO  16:02:28,510 - #26 <
INFO  16:02:28,510 - #45 0
INFO  16:02:28,511 - #38 )
INFO  16:02:28,511 - #41 {
INFO  16:02:28,511 - #44 val
INFO  16:02:28,511 - #36 .
INFO  16:02:28,511 - #44 putn
INFO  16:02:28,511 - #37 (
INFO  16:02:28,511 - #44 val
INFO  16:02:28,511 - #36 .
INFO  16:02:28,511 - #44 getn
INFO  16:02:28,511 - #37 (
INFO  16:02:28,511 - #18 -
INFO  16:02:28,511 - #44 x
INFO  16:02:28,512 - #38 )
INFO  16:02:28,512 - #17 +
INFO  16:02:28,512 - #45 1
INFO  16:02:28,512 - #38 )
INFO  16:02:28,512 - #33 ;
INFO  16:02:28,512 - #42 }
INFO  16:02:28,512 - #9 read
INFO  16:02:28,512 - #37 (
INFO  16:02:28,512 - #44 x
INFO  16:02:28,512 - #38 )
INFO  16:02:28,512 - #33 ;
INFO  16:02:28,513 - #42 }
INFO  16:02:28,513 - #42 }
INFO  16:02:28,513 - #42 }
INFO  16:02:28,513 - #31 ++
