INFO  13:44:19,139 - Compiling source file: C:\Users\Laptop\Desktop\pp1\workspace\MJCompiler\test\program.mj
INFO  13:44:19,990 - #2 program
INFO  13:44:19,991 - #45 test302
INFO  13:44:19,991 - #17 namespace
INFO  13:44:19,999 - #45 Addition
INFO  13:44:19,999 - #42 {
INFO  13:44:19,999 - #6 const
INFO  13:44:20,006 - #45 x
INFO  13:44:20,006 - #48 5
ERROR 13:44:20,006 - 
Sintaksna greska (5) na liniji 6
INFO  13:44:20,007 - #34 ;
INFO  13:44:20,007 - #6 const
INFO  13:44:20,007 - #45 int
INFO  13:44:20,009 - #45 x
ERROR 13:44:20,009 - Izvrsen oporavak do ; 
INFO  13:44:20,024 - #31 =
INFO  13:44:20,024 - #48 5
INFO  13:44:20,024 - #36 ,
INFO  13:44:20,031 - #45 int
INFO  13:44:20,031 - #45 s
ERROR 13:44:20,031 - 
Sintaksna greska (s) na liniji 7
INFO  13:44:20,034 - #36 ,
INFO  13:44:20,034 - #45 y
INFO  13:44:20,034 - #31 =
INFO  13:44:20,035 - #48 5
ERROR 13:44:20,035 - Izvrsen oporavak do , 
INFO  13:44:20,042 - #34 ;
INFO  13:44:20,043 - #42 {
INFO  13:44:20,043 - #45 int
INFO  13:44:20,045 - #45 sum
INFO  13:44:20,046 - #38 (
INFO  13:44:20,046 - #45 int
INFO  13:44:20,046 - #45 z
INFO  13:44:20,046 - #36 ,
INFO  13:44:20,066 - #45 int
INFO  13:44:20,066 - #45 d
INFO  13:44:20,067 - #39 )
INFO  13:44:20,068 - #42 {
INFO  13:44:20,076 - #11 return
INFO  13:44:20,083 - #45 z
INFO  13:44:20,096 - #18 +
INFO  13:44:20,114 - #45 d
INFO  13:44:20,120 - #34 ;
INFO  13:44:20,120 - #45 int
INFO  13:44:20,121 - #45 x
ERROR 13:44:20,121 - 
Sintaksna greska (x) na liniji 14
INFO  13:44:20,121 - #31 =
INFO  13:44:20,121 - #48 5
INFO  13:44:20,121 - #34 ;
INFO  13:44:20,121 - #7 if
INFO  13:44:20,121 - #38 (
INFO  13:44:20,121 - #45 a
INFO  13:44:20,121 - #25 >
INFO  13:44:20,121 - #48 5
INFO  13:44:20,121 - #39 )
INFO  13:44:20,122 - #45 a
INFO  13:44:20,122 - #31 =
INFO  13:44:20,122 - #48 5
INFO  13:44:20,122 - #34 ;
INFO  13:44:20,122 - #43 }
INFO  13:44:20,122 - #45 int
INFO  13:44:20,122 - #45 inkrement
INFO  13:44:20,122 - #38 (
INFO  13:44:20,122 - #45 int
INFO  13:44:20,122 - #45 a
INFO  13:44:20,122 - #36 ,
INFO  13:44:20,122 - #45 int
INFO  13:44:20,123 - #45 inc
INFO  13:44:20,123 - #39 )
INFO  13:44:20,123 - #45 int
INFO  13:44:20,123 - #45 pom
INFO  13:44:20,123 - #34 ;
INFO  13:44:20,123 - #42 {
INFO  13:44:20,123 - #7 if
INFO  13:44:20,123 - #38 (
INFO  13:44:20,123 - #45 inc
INFO  13:44:20,123 - #23 ==
INFO  13:44:20,123 - #48 1
INFO  13:44:20,123 - #39 )
INFO  13:44:20,123 - #45 pom
INFO  13:44:20,124 - #31 =
INFO  13:44:20,124 - #48 1
INFO  13:44:20,124 - #34 ;
INFO  13:44:20,124 - #5 else
INFO  13:44:20,124 - #7 if
INFO  13:44:20,124 - #38 (
INFO  13:44:20,124 - #45 inc
INFO  13:44:20,124 - #23 ==
INFO  13:44:20,124 - #48 2
INFO  13:44:20,124 - #39 )
INFO  13:44:20,124 - #45 pom
INFO  13:44:20,124 - #31 =
INFO  13:44:20,124 - #45 a
INFO  13:44:20,125 - #34 ;
INFO  13:44:20,125 - #11 return
INFO  13:44:20,125 - #45 sum
INFO  13:44:20,125 - #38 (
INFO  13:44:20,125 - #45 a
INFO  13:44:20,125 - #36 ,
INFO  13:44:20,125 - #45 pom
INFO  13:44:20,125 - #39 )
INFO  13:44:20,125 - #34 ;
INFO  13:44:20,125 - #43 }
INFO  13:44:20,125 - #43 }
INFO  13:44:20,125 - #43 }
INFO  13:44:20,125 - #17 namespace
INFO  13:44:20,125 - #45 Unpacking
INFO  13:44:20,126 - #42 {
INFO  13:44:20,126 - #45 int
INFO  13:44:20,126 - #45 niz
INFO  13:44:20,126 - #40 [
INFO  13:44:20,126 - #41 ]
INFO  13:44:20,126 - #36 ,
INFO  13:44:20,126 - #45 niz2
INFO  13:44:20,126 - #40 [
INFO  13:44:20,126 - #41 ]
INFO  13:44:20,126 - #36 ,
INFO  13:44:20,126 - #45 niz3
INFO  13:44:20,126 - #40 [
INFO  13:44:20,126 - #41 ]
INFO  13:44:20,126 - #34 ;
INFO  13:44:20,127 - #45 int
INFO  13:44:20,127 - #45 a
INFO  13:44:20,127 - #36 ,
ERROR 13:44:20,127 - Izvrsen oporavak do ; 
INFO  13:44:20,132 - #45 b
INFO  13:44:20,132 - #34 ;
INFO  13:44:20,133 - #42 {
INFO  13:44:20,133 - #43 }
INFO  13:44:20,133 - #43 }
INFO  13:44:20,133 - #45 int
INFO  13:44:20,134 - #45 i
INFO  13:44:20,134 - #34 ;
INFO  13:44:20,134 - #45 bool
INFO  13:44:20,134 - #45 ibool
INFO  13:44:20,134 - #34 ;
INFO  13:44:20,134 - #45 int
INFO  13:44:20,134 - #45 niz2
INFO  13:44:20,134 - #34 ;
INFO  13:44:20,135 - #45 int
INFO  13:44:20,135 - #45 niz
INFO  13:44:20,135 - #40 [
INFO  13:44:20,135 - #41 ]
INFO  13:44:20,135 - #34 ;
INFO  13:44:20,139 - #45 int
INFO  13:44:20,139 - #45 a
INFO  13:44:20,139 - #36 ,
INFO  13:44:20,139 - #45 curr
INFO  13:44:20,139 - #34 ;
INFO  13:44:20,140 - #42 {
INFO  13:44:20,140 - #45 bool
INFO  13:44:20,140 - #45 verify
INFO  13:44:20,140 - #38 (
INFO  13:44:20,140 - #39 )
INFO  13:44:20,144 - #42 {
INFO  13:44:20,144 - #9 print
INFO  13:44:20,144 - #38 (
INFO  13:44:20,144 - #47 v
INFO  13:44:20,144 - #39 )
INFO  13:44:20,148 - #34 ;
INFO  13:44:20,149 - #11 return
INFO  13:44:20,149 - #46 false
INFO  13:44:20,149 - #34 ;
INFO  13:44:20,149 - #43 }
INFO  13:44:20,149 - #12 void
INFO  13:44:20,150 - #45 main
INFO  13:44:20,153 - #38 (
INFO  13:44:20,153 - #39 )
INFO  13:44:20,153 - #42 {
INFO  13:44:20,153 - #43 }
INFO  13:44:20,153 - #43 }
INFO  13:44:20,156 - Prgram(
 test302
  NmespaceList(
    NoNamespaceList(
    ) [NoNamespaceList]
   Addition
    DclList(
      DclList(
        DclList(
          DclList(
            NoDeclList(
            ) [NoDeclList]
            ErrorGlobalSemi(
            ) [ErrorGlobalSemi]
          ) [DclList]
          DclConstClass(
            CnstD(
              Typee(
               int
                NoIdenL(
                ) [NoIdenL]
              ) [Typee]
             x
              ConstantNUM(
               5
              ) [ConstantNUM]
              CnstDList(
                ErrorComma(
                ) [ErrorComma]
               y
                ConstantNUM(
                 5
                ) [ConstantNUM]
              ) [CnstDList]
            ) [CnstD]
          ) [DclConstClass]
        ) [DclList]
        ErrorGlobalSemi(
        ) [ErrorGlobalSemi]
      ) [DclList]
      DclVarClass(
        VrD(
          Typee(
           int
            NoIdenL(
            ) [NoIdenL]
          ) [Typee]
         a
          NoBrackets(
          ) [NoBrackets]
          VrDList(
            NoVarDList(
            ) [NoVarDList]
           b
            NoBrackets(
            ) [NoBrackets]
          ) [VrDList]
        ) [VrD]
      ) [DclVarClass]
    ) [DclList]
    NoMethList(
    ) [NoMethList]
  ) [NmespaceList]
  DclList(
    DclList(
      DclList(
        DclList(
          DclList(
            NoDeclList(
            ) [NoDeclList]
            DclVarClass(
              VrD(
                Typee(
                 int
                  NoIdenL(
                  ) [NoIdenL]
                ) [Typee]
               i
                NoBrackets(
                ) [NoBrackets]
                NoVarDList(
                ) [NoVarDList]
              ) [VrD]
            ) [DclVarClass]
          ) [DclList]
          DclVarClass(
            VrD(
              Typee(
               bool
                NoIdenL(
                ) [NoIdenL]
              ) [Typee]
             ibool
              NoBrackets(
              ) [NoBrackets]
              NoVarDList(
              ) [NoVarDList]
            ) [VrD]
          ) [DclVarClass]
        ) [DclList]
        DclVarClass(
          VrD(
            Typee(
             int
              NoIdenL(
              ) [NoIdenL]
            ) [Typee]
           niz2
            NoBrackets(
            ) [NoBrackets]
            NoVarDList(
            ) [NoVarDList]
          ) [VrD]
        ) [DclVarClass]
      ) [DclList]
      DclVarClass(
        VrD(
          Typee(
           int
            NoIdenL(
            ) [NoIdenL]
          ) [Typee]
         niz
          Brckets(
          ) [Brckets]
          NoVarDList(
          ) [NoVarDList]
        ) [VrD]
      ) [DclVarClass]
    ) [DclList]
    DclVarClass(
      VrD(
        Typee(
         int
          NoIdenL(
          ) [NoIdenL]
        ) [Typee]
       a
        NoBrackets(
        ) [NoBrackets]
        VrDList(
          NoVarDList(
          ) [NoVarDList]
         curr
          NoBrackets(
          ) [NoBrackets]
        ) [VrDList]
      ) [VrD]
    ) [DclVarClass]
  ) [DclList]
  MthList(
    MthList(
      NoMethList(
      ) [NoMethList]
      MthodDecl(
        TypeListType(
          Typee(
           bool
            NoIdenL(
            ) [NoIdenL]
          ) [Typee]
        ) [TypeListType]
       verify
        NoFormList(
        ) [NoFormList]
        NoVarDeclList(
        ) [NoVarDeclList]
        StatL(
          StatL(
            NoStateL(
            ) [NoStateL]
            StatementPrint(
              ExprMin(
                NoMinOpt(
                ) [NoMinOpt]
                Terms(
                  Factor3(
                   v
                  ) [Factor3]
                  NoMulopFOpt(
                  ) [NoMulopFOpt]
                ) [Terms]
                NoAddopOpt(
                ) [NoAddopOpt]
              ) [ExprMin]
              NoNN(
              ) [NoNN]
            ) [StatementPrint]
          ) [StatL]
          StatementReturn(
            ExprLi(
              ExprMin(
                NoMinOpt(
                ) [NoMinOpt]
                Terms(
                  Factor4(
                   false
                  ) [Factor4]
                  NoMulopFOpt(
                  ) [NoMulopFOpt]
                ) [Terms]
                NoAddopOpt(
                ) [NoAddopOpt]
              ) [ExprMin]
            ) [ExprLi]
          ) [StatementReturn]
        ) [StatL]
      ) [MthodDecl]
    ) [MthList]
    MthodDecl(
      TypeListVoid(
      ) [TypeListVoid]
     main
      NoFormList(
      ) [NoFormList]
      NoVarDeclList(
      ) [NoVarDeclList]
      NoStateL(
      ) [NoStateL]
    ) [MthodDecl]
  ) [MthList]
) [Prgram]
INFO  13:44:20,157 - ===================================
